//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/GamePlay/Gameplay/Player/PlayerInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputs : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputs"",
    ""maps"": [
        {
            ""name"": ""BaseMovement"",
            ""id"": ""dcc6480f-fc0f-47b6-892d-0b36ea64a701"",
            ""actions"": [
                {
                    ""name"": ""Move2D"",
                    ""type"": ""Value"",
                    ""id"": ""cead26be-046d-42dc-af87-a0ebe2d8cb7d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""e6d246ef-a76b-4262-b744-58f62df18c32"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CamDelta"",
                    ""type"": ""Value"",
                    ""id"": ""cb05f085-76f0-4640-a1bf-9e302716e679"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""53c4da55-450a-42a5-b69f-9d633b961e14"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Use"",
                    ""type"": ""Button"",
                    ""id"": ""1a16b05e-75a4-4174-9605-99574fedadec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Regulate"",
                    ""type"": ""Button"",
                    ""id"": ""4f3026f4-9c3e-4cd2-8587-711a13f946a3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""374aa37c-6426-4fb5-b7c7-87811a773166"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeState"",
                    ""type"": ""Button"",
                    ""id"": ""ee3fd18f-5836-48ee-bd2a-1d30c51ea522"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""7359530a-e72b-4b18-8866-cd85f7d541b1"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move2D"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c327bf0e-f7c0-4377-a82b-d0416cb88367"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9cd6e5c2-cb38-496f-8546-e847018cdad8"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5da53107-49c7-48a5-978b-de5b478a9125"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8759fbc2-fa50-4ec6-b050-3176e03fd525"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""40e07f1d-b733-4dc4-b173-78fca99c37f9"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e72ab247-2b13-4ac1-8cf4-4fb779cbb47e"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CamDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81ba6d26-07e4-451d-b5d9-d61349f6bb25"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29656f95-a29d-4dbd-9563-1bb90cd6d272"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Use"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f9593a1-3396-44b0-8acc-2fa0755db347"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Regulate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""880a5b41-25ba-4b01-bd02-f7053f29266b"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b59b397a-0b74-4d35-9109-2ad8f0ed2d79"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeState"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // BaseMovement
        m_BaseMovement = asset.FindActionMap("BaseMovement", throwIfNotFound: true);
        m_BaseMovement_Move2D = m_BaseMovement.FindAction("Move2D", throwIfNotFound: true);
        m_BaseMovement_Jump = m_BaseMovement.FindAction("Jump", throwIfNotFound: true);
        m_BaseMovement_CamDelta = m_BaseMovement.FindAction("CamDelta", throwIfNotFound: true);
        m_BaseMovement_Interact = m_BaseMovement.FindAction("Interact", throwIfNotFound: true);
        m_BaseMovement_Use = m_BaseMovement.FindAction("Use", throwIfNotFound: true);
        m_BaseMovement_Regulate = m_BaseMovement.FindAction("Regulate", throwIfNotFound: true);
        m_BaseMovement_Sprint = m_BaseMovement.FindAction("Sprint", throwIfNotFound: true);
        m_BaseMovement_ChangeState = m_BaseMovement.FindAction("ChangeState", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // BaseMovement
    private readonly InputActionMap m_BaseMovement;
    private IBaseMovementActions m_BaseMovementActionsCallbackInterface;
    private readonly InputAction m_BaseMovement_Move2D;
    private readonly InputAction m_BaseMovement_Jump;
    private readonly InputAction m_BaseMovement_CamDelta;
    private readonly InputAction m_BaseMovement_Interact;
    private readonly InputAction m_BaseMovement_Use;
    private readonly InputAction m_BaseMovement_Regulate;
    private readonly InputAction m_BaseMovement_Sprint;
    private readonly InputAction m_BaseMovement_ChangeState;
    public struct BaseMovementActions
    {
        private @PlayerInputs m_Wrapper;
        public BaseMovementActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move2D => m_Wrapper.m_BaseMovement_Move2D;
        public InputAction @Jump => m_Wrapper.m_BaseMovement_Jump;
        public InputAction @CamDelta => m_Wrapper.m_BaseMovement_CamDelta;
        public InputAction @Interact => m_Wrapper.m_BaseMovement_Interact;
        public InputAction @Use => m_Wrapper.m_BaseMovement_Use;
        public InputAction @Regulate => m_Wrapper.m_BaseMovement_Regulate;
        public InputAction @Sprint => m_Wrapper.m_BaseMovement_Sprint;
        public InputAction @ChangeState => m_Wrapper.m_BaseMovement_ChangeState;
        public InputActionMap Get() { return m_Wrapper.m_BaseMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BaseMovementActions set) { return set.Get(); }
        public void SetCallbacks(IBaseMovementActions instance)
        {
            if (m_Wrapper.m_BaseMovementActionsCallbackInterface != null)
            {
                @Move2D.started -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnMove2D;
                @Move2D.performed -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnMove2D;
                @Move2D.canceled -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnMove2D;
                @Jump.started -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnJump;
                @CamDelta.started -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnCamDelta;
                @CamDelta.performed -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnCamDelta;
                @CamDelta.canceled -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnCamDelta;
                @Interact.started -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnInteract;
                @Use.started -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnUse;
                @Use.performed -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnUse;
                @Use.canceled -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnUse;
                @Regulate.started -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnRegulate;
                @Regulate.performed -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnRegulate;
                @Regulate.canceled -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnRegulate;
                @Sprint.started -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnSprint;
                @ChangeState.started -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnChangeState;
                @ChangeState.performed -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnChangeState;
                @ChangeState.canceled -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnChangeState;
            }
            m_Wrapper.m_BaseMovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move2D.started += instance.OnMove2D;
                @Move2D.performed += instance.OnMove2D;
                @Move2D.canceled += instance.OnMove2D;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @CamDelta.started += instance.OnCamDelta;
                @CamDelta.performed += instance.OnCamDelta;
                @CamDelta.canceled += instance.OnCamDelta;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Use.started += instance.OnUse;
                @Use.performed += instance.OnUse;
                @Use.canceled += instance.OnUse;
                @Regulate.started += instance.OnRegulate;
                @Regulate.performed += instance.OnRegulate;
                @Regulate.canceled += instance.OnRegulate;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @ChangeState.started += instance.OnChangeState;
                @ChangeState.performed += instance.OnChangeState;
                @ChangeState.canceled += instance.OnChangeState;
            }
        }
    }
    public BaseMovementActions @BaseMovement => new BaseMovementActions(this);
    public interface IBaseMovementActions
    {
        void OnMove2D(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnCamDelta(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnUse(InputAction.CallbackContext context);
        void OnRegulate(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnChangeState(InputAction.CallbackContext context);
    }
}
